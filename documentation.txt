Inheritance scheme:

It's the first time I try to use inheritance so it got a little messy, but I would like to refactor some of the code after I find a better design. Also, a lot of the feautures weren't planned from the start so a refactor would be the best thing to do.

Combat_unit ->  Virus  -> Malware (explosive virus)
                       -> Malware_defender (shielded virus)
                       -> Virus_cloud (virus spawner)
                       -> Trojan (breacher)

            ->Firewall -> Firewall_plus
                       -> Antivirus_scanner
                       -> Security_service  

Field_unit has a pointer to its Combat_unit. Field_unit contains the data that modifies during the game like the map position or the many timers, while Combat unit contains all the data that doesn't modify during the game like unit's hp and attack, it only has a timer for spawn cooldown.

Because in C++ we don't have access to a variable by its name (as string) we had to find a way to simulate that for loading the files similarly to an .xml. That's why we use our file_parser.

Library.h and texture.h are our libraries that deal with the lower level comunication with the graphic library - SDL2. And that allows us to change SDL with something else.

Most of the magic (the fun code) is in the Level class, where everything comes together and it finally works like a game.

We didn't have enough time to enable the resolution settings, so it only supports 1366x768.

Also, we struggled to balance the units as good as possible in order to make the game fair and fun to play.

All the art is our own, made by our team especially for Malware Warfare in this last month. 
The music is made by a friend.