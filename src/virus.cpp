#include "virus.h"

void Virus::Load(char *filename,int _id)
{
 id=_id;
 FILE *in=fopen(filename,"r");
 fscanf(in,"%d %d %d %d ",&number_of_frames,&damage,&cooldown_time,&ram_reward);
 char path_to_image[TEXT_LENGTH_MAX];
 fgets(path_to_image,sizeof path_to_image,in);
 int sq=strlen(path_to_image);
 if(path_to_image[sq-1]=='\n')
    path_to_image[sq-1]=NULL;
 char name[TEXT_LENGTH_MAX];
 fgets(name,sizeof name,in);
 sq=strlen(name);
 if(name[sq]=='\n')
    name[sq]=NULL;
 fclose(in);
 image=Load_Transparent_Texture(path_to_image);
 menu_image=Create_Transparent_Texture(image->w*2,image->h*2);
 Apply_Stretched_Texture(0,0,menu_image->w,menu_image->h,image,menu_image);
 Texture *cooldown_image,*damage_image,*name_image;
 char aux[TEXT_LENGTH_MAX],aux1[TEXT_LENGTH_MAX];
 name_image=Create_TTF_Texture(MENU_FONT_SMALL,name,VIRUS_NAME_COLOR);
 strcpy(aux1,"Cooldown: ");
 itoa(cooldown_time,aux);
 strcat(aux1,aux);
 cooldown_image=Create_TTF_Texture(MENU_FONT_SMALL,aux1,VIRUS_COOLDOWN_COLOR);
 strcpy(aux1,"Damage: ");
 itoa(damage,aux);
 strcat(aux1,aux);
 damage_image=Create_TTF_Texture(MENU_FONT_SMALL,aux1,VIRUS_DAMAGE_COLOR);
 menu_description=Create_Transparent_Texture(MENU_OPTION_BACKGROUND->w-2*PIXELS_PER_INGAME_UNIT,name_image->h+cooldown_image->h+damage_image->h+30);
 Apply_Texture((menu_description->w-name_image->w)/2,0,name_image,menu_description);
 Apply_Texture((menu_description->w-damage_image->w)/2,name_image->h+10,damage_image,menu_description);
 Apply_Texture((menu_description->w-cooldown_image->w)/2,name_image->h+damage_image->h+20,cooldown_image,menu_description);
 Destroy_Texture(cooldown_image);
 Destroy_Texture(damage_image);
 Destroy_Texture(name_image);
 is_cool=true;
}

void Virus::Clear()
{
 Clear_images();
 damage=cooldown_time=ram_reward=0;
 is_cool=true;
 cooldown_timer.stop();
}

void Virus::Reset()
{
 is_cool=true;
}

void Virus::Print_in_menu(int x,int y,Texture *_screen)
{
 Combat_unit::Print_in_menu(x,y,_screen);
 if(!Is_cool())
    {
     Apply_Texture(x,y,MENU_OPTION_COOLING,_screen);
     char aux[TEXT_LENGTH_MAX];
     itoa(cooldown_time-cooldown_timer.get_ticks()/1000,aux);
     Texture *cooldown_counter=Create_TTF_Texture(MENU_FONT_BIG,aux,VIRUS_COOLDOWN_COUNTER_COLOR);
     Apply_Texture(x+(MENU_OPTION_BACKGROUND->w-cooldown_counter->w)/2,y+(MENU_OPTION_BACKGROUND->h-cooldown_counter->h)/2,cooldown_counter,_screen);
     Destroy_Texture(cooldown_counter);
    }
}

void Virus::Start_cooldown()
{
 is_cool=false;
 cooldown_timer.start();
}

bool Virus::Is_cool()
{
 if(!is_cool)
    is_cool=(cooldown_time*1000-cooldown_timer.get_ticks()<=0);
 return is_cool;
}

int Virus::Get_damage()
{
 return damage;
}

int Virus::Get_ram_reward()
{
 return ram_reward;
}
