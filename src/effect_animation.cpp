#include "effect_animation.h"

void Effect_Animation::Init(int x,int y,Base_Effect_Animation *_base)
{
 base=_base;
 image_pos_on_screen.x=x;
 image_pos_on_screen.y=y;
 image_pos_on_screen.w=base->image_pos_on_screen.w;
 image_pos_on_screen.h=base->image_pos_on_screen.h;
 current_frame=0;
 timer.start();
}

void Effect_Animation::Print(Texture *_screen)
{
 if(!duration_timer.is_started())
    duration_timer.start();
 if(image_pos_on_screen.x<0)
    {
     Apply_Texture({current_frame*image_pos_on_screen.w+(0-image_pos_on_screen.x),0,image_pos_on_screen.w+(image_pos_on_screen.x-0),image_pos_on_screen.h},
                   base->image,
                   {0,image_pos_on_screen.y,image_pos_on_screen.w+(image_pos_on_screen.x-0),image_pos_on_screen.h},
                   _screen);
     return;
    }
 if(image_pos_on_screen.x+image_pos_on_screen.w>_screen->w-0)
    {
     Apply_Texture({current_frame*image_pos_on_screen.w,0,image_pos_on_screen.w-(image_pos_on_screen.x+image_pos_on_screen.w-_screen->w+0),image_pos_on_screen.h},
                   base->image,
                   {image_pos_on_screen.x,image_pos_on_screen.y,image_pos_on_screen.w-(image_pos_on_screen.x+image_pos_on_screen.w-_screen->w+0),image_pos_on_screen.h},
                   _screen);
    }
 else
    {
     Apply_Texture(current_frame*image_pos_on_screen.w,0,image_pos_on_screen.x,image_pos_on_screen.y,image_pos_on_screen.w,image_pos_on_screen.h,base->image,_screen);
    }
}

void Effect_Animation::Update()
{
 if(timer.get_ticks()>1000/base->fps)
    {
     current_frame++;
     current_frame%=base->number_of_frames;
     timer.start();
    }
}

bool Effect_Animation::Finished()
{
 if(duration_timer.get_ticks()>=base->duration)
    {
     duration_timer.stop();
     return true;
    }
 return false;
}
