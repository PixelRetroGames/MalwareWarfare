#include "firewall.h"

void Firewall::Load(char *filename,int _id)
{
 id=_id;

 char path_to_attack_image[TEXT_LENGTH_MAX],path_to_dying_image[TEXT_LENGTH_MAX],path_to_taking_damage_image[TEXT_LENGTH_MAX];
 char path_to_image[TEXT_LENGTH_MAX],path_to_splash_image[TEXT_LENGTH_MAX],name[TEXT_LENGTH_MAX];
 char description_text[TEXT_LENGTH_MAX];
 FILE *in=fopen(filename,"r");
 const int NUMBER_OF_VARS=6;
 int *vars[NUMBER_OF_VARS]={&number_of_frames,&health,&cooldown_time,&damage,&phase_change_delay,&ram_cost};
 const char *vars_names[NUMBER_OF_VARS]={"number_of_frames","health","cooldown_time","damage","phase_change_delay","ram_cost"};
 const int NUMBER_OF_STRINGS=7;
 char *strings[NUMBER_OF_STRINGS]={path_to_image,path_to_attack_image,path_to_dying_image,path_to_taking_damage_image,path_to_splash_image,name,description_text};
 const char *str_names[NUMBER_OF_STRINGS]={"image","attack_image","dying_image","taking_damage_image","splash_image","name","description_text"};
 Parse_file(in,
            NUMBER_OF_VARS,vars,vars_names,
            NUMBER_OF_STRINGS,strings,str_names);
 fclose(in);

 Load_images(path_to_image,path_to_attack_image,path_to_dying_image,path_to_taking_damage_image,path_to_splash_image);
 Create_menu_image(name,description_text);
}

void Firewall::Load_images(char *path_to_image,char *path_to_attack_image,char *path_to_dying_image,char *path_to_taking_damage_image,char *path_to_splash_image)
{
 animations[STATE_IDLE].Load(path_to_image);
 animations[STATE_ATTACKING].Load(path_to_attack_image);
 animations[STATE_DYING].Load(path_to_dying_image);
 animations[STATE_TAKING_DAMAGE].Load(path_to_taking_damage_image);
 menu_image=Load_Transparent_Texture(path_to_splash_image);
}

void Firewall::Create_menu_image(char *name,char *description)
{
 menu_description=Create_Transparent_Texture(MENU_OPTION_BACKGROUND->w/2,MENU_OPTION_BACKGROUND->h);
 Texture *description_image=Create_Transparent_Texture(MENU_OPTION_BACKGROUND->w/2,MENU_OPTION_BACKGROUND->h);

 Texture *aux;
 aux=Create_TTF_Texture(MENU_FONT_MEDIUM,name,DEFENDER_ID_COLOR);
 Apply_Texture((menu_description->w-aux->w)/2,20,aux,menu_description);
 Destroy_Texture(aux);

 int i=0,y=0;
 char o[2];
 o[0]='~';
 o[1]=NULL;
 char *p=strtok(description,o);
 while(p!=NULL)
       {
        aux=Create_TTF_Texture(MENU_FONT_SMALL,p,UNIT_DESCRIPTION_COLOR);
        Apply_Texture((description_image->w-aux->w)/2,y,aux,description_image);
        y+=aux->h;
        Destroy_Texture(aux);
        p=strtok(NULL,o);
       }

 Apply_Texture(0,(menu_description->h-y)/2,description_image,menu_description);
 Destroy_Texture(description_image);

 menu_stats_overlay=Create_Transparent_Texture(MENU_OPTION_BACKGROUND->w/2,MENU_OPTION_BACKGROUND->h);

 Texture *cooldown_image,*damage_image,*health_image;
 char aux1[TEXT_LENGTH_MAX];
 itoa(ram_cost,aux1);
 cooldown_image=Create_TTF_Texture(MENU_FONT_SMALL,aux1,VIRUS_COOLDOWN_COLOR);
 itoa(damage,aux1);
 damage_image=Create_TTF_Texture(MENU_FONT_SMALL,aux1,VIRUS_COOLDOWN_COLOR);
 itoa(health,aux1);
 health_image=Create_TTF_Texture(MENU_FONT_SMALL,aux1,VIRUS_COOLDOWN_COLOR);

 Apply_Texture((menu_stats_overlay->w-menu_image->w-MENU_COOLDOWN_ICON->w)/2,(menu_stats_overlay->h-menu_image->h-MENU_COOLDOWN_ICON->h)/2,MENU_COOLDOWN_ICON,menu_stats_overlay);
 Apply_Texture((menu_stats_overlay->w-menu_image->w-MENU_COOLDOWN_ICON->w)/2+(MENU_COOLDOWN_ICON->w-cooldown_image->w)/2,(menu_stats_overlay->h-menu_image->h-MENU_COOLDOWN_ICON->h)/2+(MENU_COOLDOWN_ICON->h-cooldown_image->h)/2,cooldown_image,menu_stats_overlay);

 Apply_Texture((menu_stats_overlay->w-menu_image->w-MENU_DAMAGE_ICON->w)/2,(menu_stats_overlay->h-menu_image->h-MENU_DAMAGE_ICON->h)/2+menu_image->h,MENU_DAMAGE_ICON,menu_stats_overlay);
 Apply_Texture((menu_stats_overlay->w-menu_image->w-MENU_DAMAGE_ICON->w)/2+(MENU_DAMAGE_ICON->w-cooldown_image->w)/2,(menu_stats_overlay->h-menu_image->h-MENU_DAMAGE_ICON->h)/2+menu_image->h+(MENU_DAMAGE_ICON->h-cooldown_image->h)/2,damage_image,menu_stats_overlay);

 Apply_Texture((menu_stats_overlay->w-menu_image->w-MENU_HEALTH_ICON->w)/2+menu_image->w,(menu_stats_overlay->h-menu_image->h-MENU_HEALTH_ICON->h)/2+menu_image->h,MENU_HEALTH_ICON,menu_stats_overlay);
 Apply_Texture((menu_stats_overlay->w-menu_image->w-MENU_HEALTH_ICON->w)/2+menu_image->w+(MENU_HEALTH_ICON->w-cooldown_image->w)/2,(menu_stats_overlay->h-menu_image->h-MENU_HEALTH_ICON->h)/2+menu_image->h+(MENU_HEALTH_ICON->h-cooldown_image->h)/2,health_image,menu_stats_overlay);

 Destroy_Texture(cooldown_image);
 Destroy_Texture(damage_image);
 Destroy_Texture(health_image);

 //menu_image=Create_Transparent_Texture(image->w*2,image->h*2);
 //Apply_Stretched_Texture(0,0,menu_image->w,menu_image->h,image,menu_image);
 /*Texture *cost_image,*health_image,*name_image;
 char aux[TEXT_LENGTH_MAX],aux1[TEXT_LENGTH_MAX];
 name_image=Create_TTF_Texture(MENU_FONT_SMALL,name,FIREWALL_NAME_COLOR);
 strcpy(aux1,"Cost: ");
 itoa(ram_cost,aux);
 strcat(aux1,aux);
 cost_image=Create_TTF_Texture(MENU_FONT_SMALL,aux1,FIREWALL_COST_COLOR);
 strcpy(aux1,"Health: ");
 itoa(health,aux);
 strcat(aux1,aux);
 health_image=Create_TTF_Texture(MENU_FONT_SMALL,aux1,FIREWALL_HEALTH_COLOR);
 menu_description=Create_Transparent_Texture(MENU_OPTION_BACKGROUND->w-2*PIXELS_PER_INGAME_UNIT,name_image->h+cost_image->h+health_image->h+30);
 Apply_Texture((menu_description->w-name_image->w)/2,0,name_image,menu_description);
 Apply_Texture((menu_description->w-health_image->w)/2,name_image->h+10,health_image,menu_description);
 Apply_Texture((menu_description->w-cost_image->w)/2,name_image->h+health_image->h+20,cost_image,menu_description);
 Destroy_Texture(cost_image);
 Destroy_Texture(health_image);
 Destroy_Texture(name_image);*/
}

void Firewall::Clear()
{
 Destroy_Texture(menu_image);
 health=0;
}

int Firewall::Get_health()
{
 return health;
}

Unit_animation Firewall::Get_animation(int id)
{
 return *animations[id].Get_unit_animation();
}

int Firewall::Get_damage()
{
 return damage;
}
