#include "firewall_plus.h"

void Firewall_plus::Clear()
{
 damage=0;
 Firewall::Clear();
}

void Firewall_plus::Load(char *filename,int _id)
{
 id=_id;

 char path_to_image[TEXT_LENGTH_MAX],path_to_splash_image[TEXT_LENGTH_MAX],name[TEXT_LENGTH_MAX];
 FILE *in=fopen(filename,"r");
 const int NUMBER_OF_VARS=4;
 int *vars[NUMBER_OF_VARS]={&number_of_frames,&health,&ram_cost,&damage};
 const char *vars_names[NUMBER_OF_VARS]={"number_of_frames","health","ram_cost","damage"};
 const int NUMBER_OF_STRINGS=3;
 char *strings[NUMBER_OF_STRINGS]={path_to_image,path_to_splash_image,name};
 const char *str_names[NUMBER_OF_STRINGS]={"image","splash_image","name"};
 for(int i=0;i<NUMBER_OF_VARS+NUMBER_OF_STRINGS;i++)
     {
      char var_name[TEXT_LENGTH_MAX];
      fscanf(in,"%s ",var_name);
      if(i<NUMBER_OF_VARS && strcmp(var_name,vars_names[i])==0)
         {
          fscanf(in,"%d ",vars[i]);
          continue;
         }
      if(i>=NUMBER_OF_VARS && strcmp(var_name,str_names[i-NUMBER_OF_VARS])==0)
         {
          fgets(strings[i-NUMBER_OF_VARS],TEXT_LENGTH_MAX,in);
          int sq=strlen(strings[i-NUMBER_OF_VARS]);
          if(strings[i-NUMBER_OF_VARS][sq-1]=='\n')
             strings[i-NUMBER_OF_VARS][sq-1]=NULL;
          continue;
         }
      bool found=false;
      for(int j=0;j<NUMBER_OF_VARS && !found;j++)
          {
           if(strcmp(var_name,vars_names[j])==0)
              {
               fscanf(in,"%d ",vars[i]);
               found=true;
              }
          }
      for(int j=0;j<NUMBER_OF_STRINGS && !found;j++)
          {
           if(strcmp(var_name,str_names[j]))
              {
               fgets(strings[j],TEXT_LENGTH_MAX,in);
               int sq=strlen(strings[j]);
               if(strings[j][sq-1]=='\n')
                  strings[j][sq-1]=NULL;
               continue;
              }
          }
     }
 fclose(in);

 image[0]=Load_Transparent_Texture(path_to_image);
 menu_image=Load_Transparent_Texture(path_to_splash_image);
 Create_menu_image(name);
}

void Firewall_plus::Create_menu_image(char *name)
{
 //menu_image=Create_Transparent_Texture(image->w*2,image->h*2);
 //Apply_Stretched_Texture(0,0,menu_image->w,menu_image->h,image,menu_image);
 Texture *cost_image,*health_image,*name_image,*damage_image;
 char aux[TEXT_LENGTH_MAX],aux1[TEXT_LENGTH_MAX];
 name_image=Create_TTF_Texture(MENU_FONT_SMALL,name,FIREWALL_NAME_COLOR);
 strcpy(aux1,"Cost: ");
 itoa(ram_cost,aux);
 strcat(aux1,aux);
 cost_image=Create_TTF_Texture(MENU_FONT_SMALL,aux1,FIREWALL_COST_COLOR);
 strcpy(aux1,"Health: ");
 itoa(health,aux);
 strcat(aux1,aux);
 health_image=Create_TTF_Texture(MENU_FONT_SMALL,aux1,FIREWALL_HEALTH_COLOR);
 strcpy(aux1,"Damage: ");
 itoa(damage,aux);
 strcat(aux1,aux);
 damage_image=Create_TTF_Texture(MENU_FONT_SMALL,aux1,FIREWALL_PLUS_DAMAGE_COLOR);
 menu_description=Create_Transparent_Texture(MENU_OPTION_BACKGROUND->w-2*PIXELS_PER_INGAME_UNIT,name_image->h+cost_image->h+health_image->h+damage_image->h);
 Apply_Texture((menu_description->w-name_image->w)/2,0,name_image,menu_description);
 Apply_Texture((menu_description->w-health_image->w)/2,name_image->h,health_image,menu_description);
 Apply_Texture((menu_description->w-damage_image->w)/2,name_image->h+health_image->h,damage_image,menu_description);
 Apply_Texture((menu_description->w-cost_image->w)/2,name_image->h+health_image->h+health_image->h,cost_image,menu_description);
 Destroy_Texture(cost_image);
 Destroy_Texture(health_image);
 Destroy_Texture(name_image);
}

int Firewall_plus::Get_damage()
{
 return damage;
}
