#include "effect_manager.h"

void Effect_Manager::Clear()
{
 for(int i=0;i<NUMBER_OF_LAYERS;i++)
     {
      std::vector<Effect_Animation>().swap(effects[i]);
     }
}

void Effect_Manager::Print(Texture *_screen)
{
 for(int l=0;l<NUMBER_OF_LAYERS;l++)
     {
      for(int i=0;i<effects[l].size();i++)
          {
           effects[l][i].Print(_screen);
          }
     }
}

void Effect_Manager::Update()
{
 for(int l=0;l<NUMBER_OF_LAYERS;l++)
     {
      for(int i=0;i<effects[l].size();i++)
          {
           effects[l][i].Update();
           if(effects[l][i].Finished())
              {
               effects[l].erase(effects[l].begin()+i);
               i--;
              }
          }
     }
}

void Effect_Manager::Add_effect(int layer,int x,int y,Base_Effect_Animation *_effect)
{
 Effect_Animation ef;
 ef.Init(x,y,_effect);
 effects[layer].push_back(ef);
}
