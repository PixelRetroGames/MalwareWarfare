#include "combat_unit.h"

void Combat_unit::Clear_images()
{
 Destroy_Texture(image);
 Destroy_Texture(menu_image);
 Destroy_Texture(menu_description);
 id=-1;
 number_of_frames=1;
 current_frame=0;
}

void Combat_unit::Print(int x,int y,Texture *_screen)
{
 Apply_Texture(current_frame*PIXELS_PER_INGAME_UNIT,0,x,y,PIXELS_PER_INGAME_UNIT,PIXELS_PER_INGAME_UNIT,image,_screen);
}

void Combat_unit::Print_in_menu(int x,int y,Texture *_screen)
{
 Apply_Texture(x,y,MENU_OPTION_BACKGROUND,_screen);
 Apply_Texture(current_frame*2*PIXELS_PER_INGAME_UNIT,0,x+5,y+(MENU_OPTION_BACKGROUND->h-2*PIXELS_PER_INGAME_UNIT)/2,2*PIXELS_PER_INGAME_UNIT,2*PIXELS_PER_INGAME_UNIT,menu_image,_screen);
 Apply_Texture(x+5+2*PIXELS_PER_INGAME_UNIT+(MENU_OPTION_BACKGROUND->w-(5+2*PIXELS_PER_INGAME_UNIT)-menu_description->w)/2,y+(MENU_OPTION_BACKGROUND->h-menu_description->h-MENU_CONTROLLER_KEYS[id%4]->h)/2+5,menu_description,_screen);
 Apply_Texture(x+5+2*PIXELS_PER_INGAME_UNIT+(MENU_OPTION_BACKGROUND->w-(5+2*PIXELS_PER_INGAME_UNIT)-MENU_CONTROLLER_KEYS[id%4]->w)/2,y+MENU_OPTION_BACKGROUND->h-MENU_CONTROLLER_KEYS[id%4]->h,MENU_CONTROLLER_KEYS[id%4],_screen);
}

void Combat_unit::Update_frame()
{
 current_frame++;
 current_frame%=number_of_frames;
}

int Combat_unit::Get_id()
{
 return id;
}
