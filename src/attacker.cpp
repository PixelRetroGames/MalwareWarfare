#include "attacker.h"

char PATH_TO_ALL_VIRUSES[]={"res/virus/all.mwav"};
const SDL_Color PLAYER_ID_COLOR={255,0,0};

void Attacker::Load(int _id)
{
 Set_id(_id);
 FILE *in=fopen(PATH_TO_ALL_VIRUSES,"r");
 for(int i=0;i<4;i++)
     {
      char aux[TEXT_LENGTH_MAX];
      fgets(aux,sizeof aux,in);
      int sq=strlen(aux);
      if(aux[sq-1]=='\n')
         aux[sq-1]=NULL;
      virus[i].Load(aux,i);
     }
 fclose(in);
 char aux[TEXT_LENGTH_MAX];
 strcpy(aux,"P");
 strcat(aux,_id==1?"1":"2");
 strcat(aux," - hacker");
 player_image=Create_TTF_Texture(MENU_FONT_BIG,aux,PLAYER_ID_COLOR);
 event_timer.start();
}

void Attacker::Clear()
{
 id=0;
 for(int i=0;i<4;i++)
     virus[i].Clear();
 Destroy_Texture(player_image);
}

void Attacker::Reset()
{
 for(int i=0;i<4;i++)
     virus[i].Reset();
 event_timer.start();
}

void Attacker::Set_id(int _id)
{
 id=_id;
}

void Attacker::Print_info(int x,int y,Texture *_screen)
{
 Apply_Texture(x,y,MENU_BACKGROUND,_screen);
 Apply_Texture(x+(MENU_OPTION_BACKGROUND->w-player_image->w)/2,y+(_screen->h-4*MENU_OPTION_BACKGROUND->h-player_image->h)/2,player_image,_screen);
 for(int i=0;i<4;i++)
     virus[3-i].Print_in_menu(x,_screen->h-(i+1)*MENU_OPTION_BACKGROUND->h,_screen);
}

int Attacker::Get_id()
{
 return id;
}

Virus *Attacker::Get_virus(int _id)
{
 return &virus[_id];
}

const int EVENT_DELAY=100;
const SDL_Scancode keys[2][4]={{SDL_SCANCODE_1,SDL_SCANCODE_2,SDL_SCANCODE_3,SDL_SCANCODE_4},{SDL_SCANCODE_U,SDL_SCANCODE_I,SDL_SCANCODE_O,SDL_SCANCODE_P}};

int Attacker::Handle_Events()
{
 if(event_timer.get_ticks()<EVENT_DELAY)
    return -1;
 for(int i=0;i<4;i++)
     {
      if((controller[id].Get_Button_State(i+1) || keystates[keys[id-1][i]]) && virus[i].Is_cool())
         {
          virus[i].Start_cooldown();
          return i;
         }
     }
 return -1;
}

void Attacker::Update_virus_frame()
{
 for(int i=0;i<4;i++)
     virus[i].Update_frame();
}
