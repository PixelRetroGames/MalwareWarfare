#include "base_effect_animation.h"

Base_Effect_Animation::Base_Effect_Animation()
{
 number_of_frames=1;
 fps=0;
 duration=0;
 image=NULL;
 image_pos_on_screen={0,0,0,0};
}

void Base_Effect_Animation::Clear()
{
 Destroy_Texture(image);
 Base_Effect_Animation();
}

void Base_Effect_Animation::Load(char *path_to_file)
{
 char path_to_image[TEXT_LENGTH_MAX];
 FILE *in=fopen(path_to_file,"r");
 const int NUMBER_OF_VARS=5;
 int *vars[NUMBER_OF_VARS]={&number_of_frames,&fps,&image_pos_on_screen.w,&image_pos_on_screen.h,&duration};
 const char *vars_names[NUMBER_OF_VARS]={"number_of_frames","fps","image_w","image_h","duration"};
 const int NUMBER_OF_STRINGS=1;
 char *strings[NUMBER_OF_STRINGS]={path_to_image};
 const char *str_names[NUMBER_OF_STRINGS]={"image"};
 for(int i=0;i<NUMBER_OF_VARS+NUMBER_OF_STRINGS;i++)
     {
      char var_name[TEXT_LENGTH_MAX];
      fscanf(in,"%s ",var_name);
      if(i<NUMBER_OF_VARS && strcmp(var_name,vars_names[i])==0)
         {
          fscanf(in,"%d ",vars[i]);
          continue;
         }
      if(i>=NUMBER_OF_VARS && strcmp(var_name,str_names[i-NUMBER_OF_VARS])==0)
         {
          fgets(strings[i-NUMBER_OF_VARS],TEXT_LENGTH_MAX,in);
          int sq=strlen(strings[i-NUMBER_OF_VARS]);
          if(strings[i-NUMBER_OF_VARS][sq-1]=='\n')
             strings[i-NUMBER_OF_VARS][sq-1]=NULL;
          continue;
         }
      bool found=false;
      for(int j=0;j<NUMBER_OF_VARS && !found;j++)
          {
           if(strcmp(var_name,vars_names[j])==0)
              {
               fscanf(in,"%d ",vars[i]);
               found=true;
              }
          }
      for(int j=0;j<NUMBER_OF_STRINGS && !found;j++)
          {
           if(strcmp(var_name,str_names[j]))
              {
               fgets(strings[j],TEXT_LENGTH_MAX,in);
               int sq=strlen(strings[j]);
               if(strings[j][sq-1]=='\n')
                  strings[j][sq-1]=NULL;
               continue;
              }
          }
     }
 fclose(in);
 image=Load_Transparent_Texture(path_to_image);
}

