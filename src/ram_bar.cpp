#include "ram_bar.h"

void Ram_bar::Set_position_on_screen(int x,int y,int w,int h)
{
 pos_on_screen={x,y,w,h};
}

void Ram_bar::Set_max_ram(int _max_ram)
{
 max_ram=_max_ram;
}

void Ram_bar::Set_ram(int _ram)
{
 ram=_ram;
 char aux[TEXT_LENGTH_MAX]={NULL},aux1[TEXT_LENGTH_MAX]={NULL};
 itoa(ram,aux);
 strcpy(aux1,aux);
 strcat(aux1,"/");
 itoa(max_ram,aux);
 strcat(aux1,aux);
 Destroy_Texture(text_image);
 text_image=Create_TTF_Texture(MENU_FONT_BIG,aux1,{255,255,255});
}

void Ram_bar::Set_number_of_boxes(int _number_of_boxes)
{
 number_of_boxes=_number_of_boxes;
 box_quantity=max_ram/number_of_boxes;
}

void Ram_bar::Print(Texture *_screen)
{
 Apply_Texture({0,0,RAM_BACKGROUND->w,RAM_BACKGROUND->h},RAM_BACKGROUND,
               pos_on_screen,_screen);
 double unit_pixels=(1.0*pos_on_screen.w/number_of_boxes)/box_quantity;
 double box_unit=1.0*pos_on_screen.w/number_of_boxes;
 for(int i=0;i<number_of_boxes && ram-i*box_quantity>=0;i++)
     {
      if(ram-i*box_quantity>=box_quantity)
         Apply_Texture({0,0,RAM_FULL_BOX->w,RAM_FULL_BOX->h},RAM_FULL_BOX,
                       {pos_on_screen.x+i*RAM_FULL_BOX->w,pos_on_screen.y,box_unit,RAM_FULL_BOX->h},_screen);
      else
         Apply_Texture({0,0,RAM_FULL_BOX->w,RAM_FULL_BOX->h},RAM_CHARGING_BOX,
                       {pos_on_screen.x+i*box_unit,pos_on_screen.y,(ram-i*box_quantity)*unit_pixels,RAM_CHARGING_BOX->h},_screen);
     }
 if(ram>=box_quantity)
    {
     Apply_Texture(pos_on_screen.x,pos_on_screen.y,5,RAM_FULL_BOX->h,RAM_HIGHLIGHTER,_screen);
     int boxes=(ram/box_quantity);
     int _ram=(boxes*box_quantity);
     Apply_Texture({10,0,5,RAM_HIGHLIGHTER->h},RAM_HIGHLIGHTER,
                   {pos_on_screen.x+5,pos_on_screen.y,boxes*box_unit-10,RAM_FULL_BOX->h},_screen);
     Apply_Texture({RAM_HIGHLIGHTER->w-10,0,10,RAM_HIGHLIGHTER->h},RAM_HIGHLIGHTER,
                   {pos_on_screen.x+boxes*box_unit-10,pos_on_screen.y,10,RAM_FULL_BOX->h},_screen);
    }
 Apply_Texture(pos_on_screen.x+(pos_on_screen.w-text_image->w)/2,pos_on_screen.y+(pos_on_screen.h-text_image->h)/2,text_image,_screen);
}

void Ram_bar::Clear()
{
 Destroy_Texture(text_image);
 text_image=NULL;
}
