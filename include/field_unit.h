#ifndef FIELD_UNIT_H
#define FIELD_UNIT_H

#include "combat_unit.h"

#include "firewall.h"
#include "firewall_plus.h"
#include "antivirus_scanner.h"
#include "security_service.h"

#include "virus.h"
#include "malware.h"
#include "malware_defender.h"
#include "trojan.h"

#include "constants.h"

extern const int STATE_WALKING,STATE_ATTACKING,STATE_DYING;

class Field_unit
{
 protected:
 int map_x=0,map_y=0;
 int phase=0;
 int damage_taken=0;
 Combat_unit *unit=NULL;
 int angle=0,state=0;
 Timer phase_timer;
 Texture *hp_image=NULL;
 Timer special_effect_timer;

 public:
 Field_unit();
 void Clear();
 void Print(int x,int y,Texture *_screen);
 void Update_phase();
 void Set_map_pos(int x,int y);
 void Set_map_pos(std::pair<int,int> pos);
 void Set_damage_taken(int _damage_taken);
 void Take_damage(int _damage);
 void Set_unit(Combat_unit *_unit);
 void Set_angle(int _angle);
 void Set_state(int _state);
 std::pair<int,int> Get_map_pos();
 Combat_unit *Get_combat_unit();
 int Get_phase();
 bool Is_dead();
 bool Phase_finished();
 bool Is_firewall();
 bool Is_virus();
 bool Triggered_special_effect();
};

#endif // FIELD_UNIT_H
