#ifndef MAP_H
#define MAP_H

#include "texture.h"
#include <vector>

const int ARENA_SIZE=12;

class Map
{
 private:
 bool arena[ARENA_SIZE][ARENA_SIZE];
 int arena_tiles[ARENA_SIZE][ARENA_SIZE],arena_tiles_angles[ARENA_SIZE][ARENA_SIZE],arena_tiles_frame=0;
 int arena_flow_direction[ARENA_SIZE][ARENA_SIZE];
 Texture *tiles[4];

 public:
 Map();
 void Clear();
 void Load(char *filename);
 void Create_flow();
 void Print_tile(Texture *_screen,int x,int y,int i,int j);
 void Print(Texture *_screen,int x,int y);
 void Update_frames();
 int Get_tile_from_neighbors(bool *neighbors,int *angle);
 void Load_new_tile(int _id);
 std::vector<std::pair<int,int> > Get_open_ports();
 int Get_flow_direction(int x,int y);
};

#endif // MAP_H
