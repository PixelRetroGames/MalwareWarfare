#ifndef MAP_H
#define MAP_H

#include "global_images.h"
#include "texture.h"
#include "constants.h"
#include <vector>

const int NUMBER_OF_TILES_COLORS=4;

class Map
{
 private:
 int size;
 int **arena;
 int **arena_tiles_colors;
 int **arena_tiles,**arena_tiles_angles;
 int arena_tiles_frame=0;
 int **arena_flow_direction;
 Texture *tiles[NUMBER_OF_TILES_COLORS][5];

 public:
 Map();
 void Clear();
 void Load(char *filename);
 void Configure();
 void Create_flow();
 void Print_tile(Texture *_screen,int x,int y,int i,int j);
 void Print(Texture *_screen,int x,int y);
 void Update_frames();
 int Get_tile_from_neighbors(bool *neighbors,int *angle);
 void Load_new_tile(int _id);
 std::vector<std::pair<int,int> > Get_open_ports();
 int Get_flow_direction(int x,int y);
 int Get_flow_direction(std::pair<int,int> pos);
 bool Is_obstacle(int x,int y);
 void Color_lanes();
 void Color_lane(int x,int y,int color);
 int Get_size();
 void Set_size(int _size);
 void Save(char *filename);
 void Set_tile(int x,int y,bool val);
 void Set_same_color();
 bool Check_if_valid_pos(int x,int y);
};

#endif // MAP_H
