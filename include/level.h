#ifndef LEVEL_H
#define LEVEL_H

#include "texture.h"
#include "attacker.h"
#include <map>
#include <queue>
#include <algorithm>

const int ARENA_SIZE=12;

class Level
{
 private:
 bool arena[ARENA_SIZE][ARENA_SIZE];
 int arena_tiles[ARENA_SIZE][ARENA_SIZE],arena_tiles_frame=0;
 int arena_flow_direction[ARENA_SIZE][ARENA_SIZE];
 std::map<int,Texture*> tiles;
 Attacker attacker;

 public:
 void Load(char *filename);
 void Create_arena_flow();
 void Start(Texture *_screen,char *filename);
 void Print(Texture *_screen);
 void Print_Map(Texture *_screen,int x,int y);
 void Update_Map_frames();
 void Update_frames();
 void Clear();
 int Get_tile_from_neighbors(bool *neighbors);
 void Load_new_tile(int _id);
};

#endif // LEVEL_H
