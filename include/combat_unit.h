#ifndef COMBAT_UNIT_H
#define COMBAT_UNIT_H

#include "texture.h"
#include "global_images.h"
#include "unit_animation.h"
#include "file_parser.h"

extern const int STATE_IDLE,STATE_WALKING,STATE_ATTACKING,STATE_DYING,STATE_TAKING_DAMAGE;

class Combat_unit
{
 protected:
 int id=-1;
 Unit_animation_global animations[5],menu_image;
 Texture *menu_description;
 int number_of_frames=1,current_frame=0;
 int phase_change_delay;
 int cooldown_time=0;
 Timer cooldown_timer;
 bool is_cool=true;
 int first_cooldown=0;
 int ram_cost=0;

 public:
 Combat_unit();
 void Reset();
 void Clear_images();
 void Start_cooldown();
 bool Is_cool();
 bool Is_enough_ram(int ram);
 void Set_first_cooldown(int _cooldown);
 virtual void Print(bool taking_damage,int _frame,int x,int y,int angle,int state,Texture *_screen);
 virtual void Print_in_menu(int x,int y,Texture *_screen,int ram);
 void Update_frame();
 int Get_id();
 int Get_phase_change_delay();
 int Get_ram_cost();
 virtual int Get_damage();
 virtual int Get_health();
 virtual int Get_radius();
 virtual int Get_attack_delay();
 virtual Unit_animation Get_animation(int id);
 virtual int Get_range();
 virtual int Get_spawn_delay();
 virtual int Get_ram_reward();
 virtual int Get_shield_health();
 virtual int Get_stun_time();
 virtual int Get_activation_time();
 virtual int Get_slow_time();
};

#endif // COMBAT_UNIT_H
